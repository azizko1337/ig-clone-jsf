package com.jsf.controllers;

import java.io.IOException;
import java.io.Serializable;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

import org.primefaces.model.file.UploadedFile;

import jakarta.ejb.EJB;
import jakarta.faces.application.FacesMessage;
import jakarta.faces.context.FacesContext;
import jakarta.faces.context.Flash;
import jakarta.faces.view.ViewScoped;
import jakarta.inject.Inject;
import jakarta.inject.Named;
import jakarta.servlet.ServletContext;
import jakarta.servlet.http.HttpSession;

import com.jsf.dao.PostDAO;
import com.jsf.entities.Post;

@Named
@ViewScoped
public class PostEdit {
	private static final String PAGE_POST_LIST = "index?faces-redirect=true";
	
	private Post post = new Post();
	private Post loaded = null;
	private UploadedFile uploadedFile;
	
	@EJB
	PostDAO postDAO;

	@Inject
	FacesContext context;

	@Inject
	Flash flash;
	
	@Inject
    ServletContext servletContext;
	
	public void onLoad() throws IOException {
		// 1. load person passed through session
		// HttpSession session = (HttpSession) context.getExternalContext().getSession(true);
		// loaded = (Person) session.getAttribute("person");

		// 2. load person passed through flash
		loaded = (Post) flash.get("post");

		// cleaning: attribute received => delete it from session
		if (loaded != null) {
			post = loaded;
			// session.removeAttribute("person");
		} else {
			context.addMessage(null, new FacesMessage(FacesMessage.SEVERITY_ERROR, "Błędne użycie systemu", null));
			// if (!context.isPostback()) { //possible redirect
			// context.getExternalContext().redirect("personList.xhtml");
			// context.responseComplete();
			// }
		}
	}
	
	public String saveData() {
		// no Person object passed
		if (loaded == null) {
			return null;
		}

		try {
			if (post.getId() == 0) {
				// new record
				postDAO.create(post);
			} else {
				// existing record
				postDAO.merge(post);
			}
		} catch (Exception e) {
			e.printStackTrace();
			context.addMessage(null,
					new FacesMessage(FacesMessage.SEVERITY_ERROR, "wystąpił błąd podczas zapisu", null));
			return null;
		}

		return PAGE_POST_LIST;
	}
	
    private void handleUploadedFile() throws IOException {
    	if (uploadedFile != null) {
            String fileName = uploadedFile.getFileName();

            // Ścieżka do folderu
            String baseUploadPath = servletContext.getRealPath("/uploads");
            Path postFolderPath = Paths.get(baseUploadPath);

            if (!Files.exists(postFolderPath)) {
                Files.createDirectories(postFolderPath);
            }

            Path filePath = postFolderPath.resolve(post.getId() + ".jpg");

            // Zapis pliku
            Files.copy(uploadedFile.getInputStream(), filePath, StandardCopyOption.REPLACE_EXISTING);
        }

    }
}
