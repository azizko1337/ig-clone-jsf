package com.jsf.datamodels;

import java.util.List;

import org.primefaces.model.LazyDataModel;

import com.jsf.entities.Post;

public class LazyFeedDataModel extends LazyDataModel<Post>{
	private static final long serialVersionUID = 1L;
	
	private List<Post> datasource;
	
	public LazyFeedDataModel(List<Post> datasource) {
        this.datasource = datasource;
    }
	
	@Override
    public List<Post> load(int offset, int pageSize) {
        // apply offset & filters
        List<Post> customers = datasource.stream();

        // sort
        if (!sortBy.isEmpty()) {
            List<Comparator<Customer>> comparators = sortBy.values().stream()
                    .map(o -> new LazySorter(o.getField(), o.getOrder()))
                    .collect(Collectors.toList());
            Comparator<Customer> cp = ComparatorUtils.chainedComparator(comparators); // from apache
            customers.sort(cp);
        }

        return customers.subList(offset, Math.min(offset + pageSize, customers.size()));
    }
}
